#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
swagger: "2.0"
info:
  description: Api Documentation
  version: "1.0"
  title: Api Documentation
  termsOfService: urn:tos
  contact:
    name: ""
    url: ""
    email: ""
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
host: ""
basePath: /
tags: []
schemes: []
consumes: []
produces: []
paths:
  /danglingPattern/**:
    post:
      tags:
      - schema-content-controller
      summary: danglingPattern
      operationId: danglingPatternUsingPOST
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: id
        description: id
        required: true
        schema:
          type: string
          format: ""
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
          responseSchema:
            type: string
            format: ""
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
  /sayHelloGet:
    get:
      tags:
      - schema-content-controller
      summary: sayHelloGet
      operationId: sayHelloGetUsingGET
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: id
        in: query
        description: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
          responseSchema:
            type: string
            format: ""
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
    head:
      tags:
      - schema-content-controller
      summary: sayHelloGet
      operationId: sayHelloGetUsingHEAD
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: query
        description: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
          responseSchema:
            type: string
            format: ""
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
    post:
      tags:
      - schema-content-controller
      summary: sayHelloGet
      operationId: sayHelloGetUsingPOST
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: query
        description: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
          responseSchema:
            type: string
            format: ""
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
    put:
      tags:
      - schema-content-controller
      summary: sayHelloGet
      operationId: sayHelloGetUsingPUT
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: query
        description: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
          responseSchema:
            type: string
            format: ""
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
    delete:
      tags:
      - schema-content-controller
      summary: sayHelloGet
      operationId: sayHelloGetUsingDELETE
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: id
        in: query
        description: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
          responseSchema:
            type: string
            format: ""
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
    options:
      tags:
      - schema-content-controller
      summary: sayHelloGet
      operationId: sayHelloGetUsingOPTIONS
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: query
        description: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
          responseSchema:
            type: string
            format: ""
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
    patch:
      tags:
      - schema-content-controller
      summary: sayHelloGet
      operationId: sayHelloGetUsingPATCH
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: query
        description: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
          responseSchema:
            type: string
            format: ""
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
  /sayHelloPost:
    post:
      tags:
      - schema-content-controller
      summary: sayHelloPost
      operationId: sayHelloPostUsingPOST
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: query
        description: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
          responseSchema:
            type: string
            format: ""
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
  /stringRequestBody:
    post:
      tags:
      - schema-content-controller
      summary: stringRequestBody
      operationId: stringRequestBodyUsingPOST
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: id
        description: id
        required: true
        schema:
          type: string
          format: ""
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
          responseSchema:
            type: string
            format: ""
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
securityDefinitions: {}
definitions: {}

